name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g. v0.2.5)"
        required: true
      prerelease:
        description: "Mark as pre-release?"
        required: false
        default: "false"

permissions:
  contents: write

jobs:
  release:
    name: Create Manual Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby and FPM
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev build-essential
          sudo gem install --no-document fpm

      - name: Install musl tools and sqlite dev
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools pkg-config libsqlite3-dev

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl

      - name: Build packages
        run: |
          export VERSION=${{ github.event.inputs.version }}
          export CC_x86_64_unknown_linux_musl=musl-gcc
          export CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_LINKER=musl-gcc
          ./scripts/build_packages.sh

      - name: Create git tag (if not exists)
        run: |
          VERSION=${{ github.event.inputs.version }}
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "Tag $VERSION already exists, skipping tag creation"
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag "$VERSION"
            git push origin "$VERSION"
          fi

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          prerelease: ${{ github.event.inputs.prerelease }}
          files: |
            bindizr_*.deb
            bindizr-*.rpm
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
